@model PublicacaoComentarioViewModel
<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: Arial, sans-serif;
    }

    body {
        background-color: #f5f5f5;
    }

    .container {
        max-width: 800px;
        margin: 0 auto;
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .back-button {
        margin-bottom: 20px;
    }

    .btn-back {
        text-decoration: none;
        font-size: 16px;
        color: #fff;
        background-color: #007bff;
        padding: 10px 20px;
        border-radius: 5px;
        transition: background-color 0.3s;
    }

        .btn-back:hover {
            background-color: #0056b3;
        }

    .publication-details {
        text-align: center;
        margin-bottom: 30px;
    }

    .publication-image {
        max-width: 100%;
        height: auto;
        border-radius: 8px;
        margin-bottom: 20px;
    }

    .publication-title {
        font-size: 28px;
        color: #333;
        margin-bottom: 10px;
    }

    .publication-description {
        font-size: 18px;
        color: #666;
    }

    .comments-section {
        margin-top: 30px;
    }

        .comments-section h2 {
            font-size: 24px;
            margin-bottom: 20px;
            color: #333;
        }

    .comment {
        background-color: #f9f9f9;
        padding: 15px;
        border-radius: 8px;
        margin-bottom: 15px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    }

    .comment-author {
        font-weight: bold;
        margin-bottom: 5px;
        color: #333;
    }

    .comment-description {
        font-size: 16px;
        margin-bottom: 10px;
        color: #555;
    }

    .comment-date {
        font-size: 14px;
        color: #999;
        text-align: right;
    }

    .add-comment {
        margin-bottom: 30px;
        padding: 20px;
        background-color: #f1f1f1;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    }

        .add-comment h3 {
            font-size: 20px;
            margin-bottom: 15px;
            color: #333;
        }

        .add-comment label {
            font-size: 16px;
            color: #333;
            display: block;
            margin-bottom: 8px;
        }

        .add-comment input[type="text"],
        .add-comment textarea {
            width: 100%;
            padding: 10px;
            margin-bottom: 15px;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-size: 16px;
        }

        .add-comment textarea {
            resize: vertical;
        }

    .btn-submit {
        background-color: #28a745;
        color: #fff;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        font-size: 16px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

        .btn-submit:hover {
            background-color: #218838;
        }

    .btn-edit-post {
        background-color: #28a745;
        color: #fff;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        font-size: 16px;
        cursor: pointer;
        transition: background-color 0.3s;
        margin-left: 10px;
    }

        .btn-edit-post:hover {
            background-color: #218838;
        }

    .btn-delete-post {
        background-color: #dc3545;
        color: #fff;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        font-size: 16px;
        cursor: pointer;
        transition: background-color 0.3s, transform 0.2s;
        margin-left: 10px;
    }

        .btn-delete-post:hover {
            background-color: #c82333; 
            transform: scale(1.05); 
        }

    .button-group {
        display: flex;
        justify-content: end;
    }

    button {
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        font-size: 16px;
        cursor: pointer;
    }

    .btn-voltar {
        background-color: #ccc;
        color: #333;
    }

        .btn-voltar:hover {
            background-color: #b3b3b3;
        }

    .hidden {
        display: none;
    }

    .icon-button {
        background: none;
        border: none;
        cursor: pointer;
        margin-right: 10px;
    }

        .icon-button i {
            font-size: 20px;
        }

    .edit-buttons {
        margin-top: 10px;
    }

    .btn-cancel {
        background-color: #dc3545;
        color: white;
    }

        .btn-cancel:hover {
            background-color: #c82333;
        }


    .alert {
        padding: 15px;
        margin-bottom: 20px;
        border-radius: 4px;
    }

    .alert-danger {
        background-color: #f2dede;
        color: #a94442;
    }

    .alert-success {
        background-color: #dff0d8;
        color: #3c763d;
    }
</style>

<body>
    <div class="container">
        <div class="publication-details">
            @if (!string.IsNullOrEmpty(Model.Publicacao.Imagem))
            {
                <img src="~/imagens/@Model.Publicacao.Imagem" alt="Imagem Publicação" class="publication-image">
            }
            else
            {
                <img src="https://via.placeholder.com/300x200" alt="Imagem Publicação" class="publication-image">
            }
            <h1 class="publication-title">@Model.Publicacao.Titulo</h1>
            <p class="publication-description">@Model.Publicacao.Descricao</p>
        </div>

        <div class="button-group">
            <button type="button" class="btn-voltar">Voltar</button>
            <button type="button" class="btn-delete-post" onclick="confirmDeletePublicacao('@Model.PublicacaoId')">Excluir</button>
            <button type="button" class="btn-edit-post" data-publicacao-id="@Model.PublicacaoId">Editar</button>
        </div>

        <div class="comments-section">
            <div class="add-comment">
                <h3>Adicionar novo comentário</h3>
                @using (Html.BeginForm("AdicionarComentario", "Publicacoes", FormMethod.Post))
                {
                    @Html.HiddenFor(model => model.PublicacaoId)

                    <div>
                        @Html.TextAreaFor(model => model.Comentario.Descricao, new { @class = "form-control", rows = "4", placeholder = "Escreva seu comentário" })
                    </div>
                    <button type="submit" class="btn-submit">Enviar Comentário</button>
                }
            </div>

            @if (Model.Publicacao.Comentarios.Count() > 0)
            {
                <h2>Comentários</h2>
            }

            @foreach (var comentario in Model.Publicacao.Comentarios)
            {
                <div class="comment" id="comment-@comentario.Id">
                    <div class="comment-content">
                        <div>
                            <p class="comment-author">@comentario.Autor.Email</p>
                            <p class="comment-description" id="comment-description-@comentario.Id">@comentario.Descricao</p>
                            <p class="comment-date">@comentario.DataPublicacao.ToString("dd/MM/yyyy HH:mm")</p>
                        </div>
                        @if(ViewBag.UsuarioId != null && (ViewBag.UsuarioAdmin || ViewBag.UsuarioId == comentario.Autor.Id))
                        {
                            <div class="comment-icons-right">
                                <button class="icon-button btn-edit" id="edit-icon-@comentario.Id" onclick="enableEditComment('@comentario.Id')">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="icon-button btn-delete" id="delete-icon-@comentario.Id"
                                        onclick="confirmDeleteComentario('@comentario.Id', '@Model.PublicacaoId')">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        }
                    </div>

                    <div id="edit-comment-@comentario.Id" class="hidden">
                        @using (Html.BeginForm("EditarComentario", "Publicacoes", FormMethod.Post))
                        {
                            @Html.Hidden("comentarioId", comentario.Id)
                            @Html.Hidden("publicacaoId", Model.PublicacaoId)
                            <textarea name="descricao" class="form-control">@comentario.Descricao</textarea>
                            <div class="edit-buttons">
                                <button type="submit" class="btn-submit">Salvar</button>
                                <button type="button" class="btn-cancel" onclick="cancelEdit('@comentario.Id')">Cancelar</button>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger">
                @TempData["ErrorMessage"]
            </div>
        }
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            window.enableEditComment = function (comentarioId) {
                console.log('Função enableEditComment chamada para:', comentarioId);
                var commentDisplay = document.getElementById('comment-description-' + comentarioId);
                var editIcon = document.getElementById('edit-icon-' + comentarioId);
                var deleteIcon = document.getElementById('delete-icon-' + comentarioId);
                var editForm = document.getElementById('edit-comment-' + comentarioId);

                commentDisplay.classList.add('hidden');
                editIcon.classList.add('hidden');
                deleteIcon.classList.add('hidden');
                editForm.classList.remove('hidden');
            };

            window.cancelEdit = function (comentarioId) {
                var commentDisplay = document.getElementById('comment-description-' + comentarioId);
                var editIcon = document.getElementById('edit-icon-' + comentarioId);
                var deleteIcon = document.getElementById('delete-icon-' + comentarioId);
                var editForm = document.getElementById('edit-comment-' + comentarioId);

                commentDisplay.classList.remove('hidden');
                editIcon.classList.remove('hidden');
                deleteIcon.classList.remove('hidden');
                editForm.classList.add('hidden');
            };
        });

        function confirmDeleteComentario(comentarioId, publicacaoId) {
            if (confirm("Tem certeza que deseja excluir este comentário?")) {
                var form = document.createElement("form");
                form.method = "post";
                form.action = "/Publicacoes/ExcluirComentario";

                var antiForgeryToken = document.querySelector('input[name="__RequestVerificationToken"]').value;
                var inputToken = document.createElement("input");
                inputToken.type = "hidden";
                inputToken.name = "__RequestVerificationToken";
                inputToken.value = antiForgeryToken;

                var inputComentario = document.createElement("input");
                inputComentario.type = "hidden";
                inputComentario.name = "comentarioId";
                inputComentario.value = comentarioId;

                var inputPublicacao = document.createElement("input");
                inputPublicacao.type = "hidden";
                inputPublicacao.name = "publicacaoId";
                inputPublicacao.value = publicacaoId;

                form.appendChild(inputToken);
                form.appendChild(inputComentario);
                form.appendChild(inputPublicacao);
                document.body.appendChild(form);
                form.submit();
            }
        }

        function confirmDeletePublicacao(publicacaoId) {
            if (confirm("Tem certeza que deseja excluir essa publicação?")) {
                var form = document.createElement("form");
                form.method = "post";
                form.action = "/Publicacoes/Excluir";

                var antiForgeryToken = document.querySelector('input[name="__RequestVerificationToken"]').value;
                var inputToken = document.createElement("input");
                inputToken.type = "hidden";
                inputToken.name = "__RequestVerificationToken";
                inputToken.value = antiForgeryToken;

                var inputPublicacao = document.createElement("input");
                inputPublicacao.type = "hidden";
                inputPublicacao.name = "publicacaoId";
                inputPublicacao.value = publicacaoId;

                form.appendChild(inputToken);
                form.appendChild(inputPublicacao);
                document.body.appendChild(form);
                form.submit();
            }
        }
        
    </script>
</body> 

<script>
    document.querySelector('.btn-voltar').addEventListener('click', function () {
        window.location.href = '/Publicacoes/Index';
    });

    document.querySelector('.btn-edit-post').addEventListener('click', function () {
        var publicacaoId = this.getAttribute('data-publicacao-id');
        window.location.href = '/Publicacoes/Edit/' + publicacaoId;
    });
</script>